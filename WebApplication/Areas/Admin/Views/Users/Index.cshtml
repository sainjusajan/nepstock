@using WebApplication.Infrastructure.ViewModels
@using WebApplication.Core.Domains
@model PaginatedList<UserAdminViewModel>
@{
    ViewData["Title"] = "Users ";
}

<div class="panel">
    <header class="panel-heading" style="margin-bottom: 30px;">Users</header>
    <div class="panel-body">
        <div class="clearfix"></div>
        <div class="col-md-12">
            <div class="m-0 p-t-30">
                 
                 
                <h2>Users | Total Page : @Model.TotalPages, @Model.Count</h2>
                <p>
                    <a asp-action="Create" class="btn btn-primary pull-right">Create New User</a>
                    
                </p>
                <div class="clearfix"></div>

                <form asp-action="Default" method="get">
                    <div class="form-actions no-color">
                        <p>
                            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="" style="height: 34px;border-radius: 5px;"/>
                            <input type="submit" value="Search" class="btn btn-default btn" /> |
                            <a asp-action="Default">Back to Full List</a>
                        </p>
                    </div>
                </form>

                <table class="table table-responsive table-bordered" style="margin-top: 40px; border-bottom: 2px solid #ddd">
                    <thead>
                        <tr>
                            <th>
                                User Name
                            </th>
                            <th>
                                <a asp-action="Default" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Email</a>
                            </th>
                            <th>
                                <a asp-action="Default" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Created On</a>
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td>

                                    @*@foreach (var role in item.RoleNames)
                                    {
                                            @Html.DisplayFor(modelItem => role)

                                    }*@
                                    
                                    
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }

                <a asp-action="Default"
                asp-route-sortOrder="@ViewData["CurrentSort"]"
                asp-route-page="@(Model.PageIndex - 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"
                class="btn btn-default @prevDisabled btn">
                    Previous
                </a>
                <a asp-action="Default"
                asp-route-sortOrder="@ViewData["CurrentSort"]"
                asp-route-page="@(Model.PageIndex + 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"
                class="btn btn-default @nextDisabled btn">
                    Next
                </a>
                

            </div>
        </div>
    </div>
</div>



